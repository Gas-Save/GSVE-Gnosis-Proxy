{
  "contractName": "GSVEVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This smart contract is a \\\"vault\\\" it holds onto the fees that the protocol has gathered and any GSVE that is to be rewarded from protocol iteraction\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEVault.sol\":\"GSVEVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEVault.sol\":{\"keccak256\":\"0x28629afe8541c687f3c9fe184304ec6a9c8712719531dd6dc97158482695a150\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bbcaa4d0132489edb2a49a550427b4b461aa01db9e68f767e9199c35ab0d3f9\",\"dweb:/ipfs/QmQtdsUBQUsB1kZSEZetUq6Ko9xrs8X1cGj7fUC1iNPUfp\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610473806100616000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007a578063f5537ede1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b6100596100883660046103c1565b610161565b61005961009b3660046103e2565b6102aa565b6000546001600160a01b031633146100ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546001600160a01b031633146101bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b6001600160a01b0381166102375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f919061041d565b50505050565b80356001600160a01b03811681146103bc57600080fd5b919050565b6000602082840312156103d2578081fd5b6103db826103a5565b9392505050565b6000806000606084860312156103f6578182fd5b6103ff846103a5565b925061040d602085016103a5565b9150604084013590509250925092565b60006020828403121561042e578081fd5b815180151581146103db578182fdfea2646970667358221220ffca5e2345e38ef5ce85c7faa088c030f3a7992a90a4065de224d80334ef0aa264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f2fde38b1461007a578063f5537ede1461008d575b600080fd5b6100596100a0565b005b600054604080516001600160a01b039092168252519081900360200190f35b6100596100883660046103c1565b610161565b61005961009b3660046103e2565b6102aa565b6000546001600160a01b031633146100ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546001600160a01b031633146101bb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b6001600160a01b0381166102375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016100f6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f6565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb90604401602060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f919061041d565b50505050565b80356001600160a01b03811681146103bc57600080fd5b919050565b6000602082840312156103d2578081fd5b6103db826103a5565b9392505050565b6000806000606084860312156103f6578182fd5b6103ff846103a5565b925061040d602085016103a5565b9150604084013590509250925092565b60006020828403121561042e578081fd5b815180151581146103db578182fdfea2646970667358221220ffca5e2345e38ef5ce85c7faa088c030f3a7992a90a4065de224d80334ef0aa264736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2359:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:25",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:25"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:25",
                "type": ""
              }
            ],
            "src": "14:196:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:25",
                "type": ""
              }
            ],
            "src": "215:196:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "520:234:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:25"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "541:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "550:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "537:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "537:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "562:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "533:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "530:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "630:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "611:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "611:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "649:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "682:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "693:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "678:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "678:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "659:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "649:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "733:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "744:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "729:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "729:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "716:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "706:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "470:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "481:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "493:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "501:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "509:6:25",
                "type": ""
              }
            ],
            "src": "416:338:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "837:219:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "883:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "892:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "900:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "885:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "885:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "885:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "858:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "867:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "854:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "854:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "879:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "850:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "847:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "918:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "937:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "931:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:16:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "922:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1000:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1009:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1017:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1002:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1002:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1002:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "969:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "990:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "983:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "983:13:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "976:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "976:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "966:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "959:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "956:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1035:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1045:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1035:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "803:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "814:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "826:6:25",
                "type": ""
              }
            ],
            "src": "759:297:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1162:125:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1172:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1184:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1195:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1180:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1172:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1214:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1229:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1237:42:25",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1225:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1225:55:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1207:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1207:74:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1207:74:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1131:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1142:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1153:4:25",
                "type": ""
              }
            ],
            "src": "1061:226:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1421:168:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1431:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1443:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1439:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1431:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1473:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1488:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:42:25",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:55:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1466:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:74:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1466:74:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1560:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1571:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1556:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1556:18:25"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1576:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1549:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1549:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1549:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1382:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1393:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1401:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1412:4:25",
                "type": ""
              }
            ],
            "src": "1292:297:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1768:228:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1785:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1796:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1778:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1778:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1778:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1819:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1830:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1815:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1815:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1835:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1808:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1808:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1808:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1858:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1854:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1874:34:25",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1847:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1929:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1940:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1945:8:25",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1918:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:36:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1918:36:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1963:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1975:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1986:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1971:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1963:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1745:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1759:4:25",
                "type": ""
              }
            ],
            "src": "1594:402:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2175:182:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2192:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2203:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2185:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2226:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2237:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2222:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2222:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2215:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2215:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2215:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2265:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2276:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2261:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2261:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2281:34:25",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2254:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2254:62:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2337:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2333:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2333:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2325:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2152:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2166:4:25",
                "type": ""
              }
            ],
            "src": "2001:356:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "345:188:7:-:0;;;;;;;;;;;;-1:-1:-1;867:17:16;909:18;;-1:-1:-1;;;;;;909:18:16;665:10:22;909:18:16;;;;;942:43;;665:10:22;;;;942:43:16;;867:17;;942:43;842:150;345:188:7;;;;;;",
  "deployedSourceMap": "345:188:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:145:16;;;:::i;:::-;;1068:85;1114:7;1140:6;1068:85;;;-1:-1:-1;;;;;1140:6:16;;;1207:74:25;;1068:85:16;;;;;1195:2:25;1068:85:16;;;1994:240;;;;;;:::i;:::-;;:::i;381:149:7:-;;;;;;:::i;:::-;;:::i;1700:145:16:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:16;665:10:22;1280:23:16;1272:68;;;;-1:-1:-1;;;1272:68:16;;2203:2:25;1272:68:16;;;2185:21:25;;;2222:18;;;2215:30;2281:34;2261:18;;;2254:62;2333:18;;1272:68:16;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:16;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;1994:240::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:16;665:10:22;1280:23:16;1272:68;;;;-1:-1:-1;;;1272:68:16;;2203:2:25;1272:68:16;;;2185:21:25;;;2222:18;;;2215:30;2281:34;2261:18;;;2254:62;2333:18;;1272:68:16;2175:182:25;1272:68:16;-1:-1:-1;;;;;2082:22:16;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:16;;1796:2:25;2074:73:16::1;::::0;::::1;1778:21:25::0;1835:2;1815:18;;;1808:30;1874:34;1854:18;;;1847:62;1945:8;1925:18;;;1918:36;1971:19;;2074:73:16::1;1768:228:25::0;2074:73:16::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:16;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;-1:-1:-1::0;;;;;2210:17:16;;;::::1;::::0;;;::::1;::::0;;1994:240::o;381:149:7:-;1114:7:16;1140:6;-1:-1:-1;;;;;1140:6:16;665:10:22;1280:23:16;1272:68;;;;-1:-1:-1;;;1272:68:16;;2203:2:25;1272:68:16;;;2185:21:25;;;2222:18;;;2215:30;2281:34;2261:18;;;2254:62;2333:18;;1272:68:16;2175:182:25;1272:68:16;481:41:7::1;::::0;;;;-1:-1:-1;;;;;1484:55:25;;;481:41:7::1;::::0;::::1;1466:74:25::0;1556:18;;;1549:34;;;481:22:7;::::1;::::0;::::1;::::0;1439:18:25;;481:41:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;381:149:::0;;;:::o;14:196:25:-;82:20;;-1:-1:-1;;;;;131:54:25;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:25:o;416:338::-;493:6;501;509;562:2;550:9;541:7;537:23;533:32;530:2;;;583:6;575;568:22;530:2;611:29;630:9;611:29;:::i;:::-;601:39;;659:38;693:2;682:9;678:18;659:38;:::i;:::-;649:48;;744:2;733:9;729:18;716:32;706:42;;520:234;;;;;:::o;759:297::-;826:6;879:2;867:9;858:7;854:23;850:32;847:2;;;900:6;892;885:22;847:2;937:9;931:16;990:5;983:13;976:21;969:5;966:32;956:2;;1017:6;1009;1002:22",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n* @dev This smart contract is a \"vault\"\r\n* it holds onto the fees that the protocol has gathered\r\n* and any GSVE that is to be rewarded from protocol iteraction\r\n*/\r\ncontract GSVEVault is Ownable{\r\n    function transferToken(address token, address recipient, uint256 amount) public onlyOwner{\r\n        IERC20(token).transfer(recipient, amount);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEVault.sol",
  "ast": {
    "absolutePath": "/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEVault.sol",
    "exportedSymbols": {
      "Context": [
        6132
      ],
      "GSVEVault": [
        2997
      ],
      "IERC20": [
        5813
      ],
      "Ownable": [
        5114
      ]
    },
    "id": 2998,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2971,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2998,
        "sourceUnit": 5814,
        "src": "60:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2998,
        "sourceUnit": 5115,
        "src": "118:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2975,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5114,
              "src": "367:7:7"
            },
            "id": 2976,
            "nodeType": "InheritanceSpecifier",
            "src": "367:7:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2974,
          "nodeType": "StructuredDocumentation",
          "src": "174:169:7",
          "text": " @dev This smart contract is a \"vault\"\n it holds onto the fees that the protocol has gathered\n and any GSVE that is to be rewarded from protocol iteraction"
        },
        "fullyImplemented": true,
        "id": 2997,
        "linearizedBaseContracts": [
          2997,
          5114,
          6132
        ],
        "name": "GSVEVault",
        "nameLocation": "354:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2995,
              "nodeType": "Block",
              "src": "470:60:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2991,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2980,
                        "src": "504:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2992,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2982,
                        "src": "515:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2988,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2978,
                            "src": "488:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2987,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5813,
                          "src": "481:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5813_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "481:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5813",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5762,
                      "src": "481:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2994,
                  "nodeType": "ExpressionStatement",
                  "src": "481:41:7"
                }
              ]
            },
            "functionSelector": "f5537ede",
            "id": 2996,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2984,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5063,
                  "src": "461:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "461:9:7"
              }
            ],
            "name": "transferToken",
            "nameLocation": "390:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2978,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "412:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "404:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "427:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "419:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2982,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "446:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "438:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:50:7"
            },
            "returnParameters": {
              "id": 2986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:7"
            },
            "scope": 2997,
            "src": "381:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2998,
        "src": "345:188:7",
        "usedErrors": []
      }
    ],
    "src": "33:502:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEVault.sol",
    "exportedSymbols": {
      "Context": [
        6132
      ],
      "GSVEVault": [
        2997
      ],
      "IERC20": [
        5813
      ],
      "Ownable": [
        5114
      ]
    },
    "id": 2998,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2971,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2972,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2998,
        "sourceUnit": 5814,
        "src": "60:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2998,
        "sourceUnit": 5115,
        "src": "118:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2975,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5114,
              "src": "367:7:7"
            },
            "id": 2976,
            "nodeType": "InheritanceSpecifier",
            "src": "367:7:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2974,
          "nodeType": "StructuredDocumentation",
          "src": "174:169:7",
          "text": " @dev This smart contract is a \"vault\"\n it holds onto the fees that the protocol has gathered\n and any GSVE that is to be rewarded from protocol iteraction"
        },
        "fullyImplemented": true,
        "id": 2997,
        "linearizedBaseContracts": [
          2997,
          5114,
          6132
        ],
        "name": "GSVEVault",
        "nameLocation": "354:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2995,
              "nodeType": "Block",
              "src": "470:60:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2991,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2980,
                        "src": "504:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2992,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2982,
                        "src": "515:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2988,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2978,
                            "src": "488:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2987,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5813,
                          "src": "481:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5813_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "481:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5813",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5762,
                      "src": "481:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2994,
                  "nodeType": "ExpressionStatement",
                  "src": "481:41:7"
                }
              ]
            },
            "functionSelector": "f5537ede",
            "id": 2996,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2984,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5063,
                  "src": "461:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "461:9:7"
              }
            ],
            "name": "transferToken",
            "nameLocation": "390:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2978,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "412:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "404:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2980,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "427:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "419:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2982,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "446:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2996,
                  "src": "438:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:50:7"
            },
            "returnParameters": {
              "id": 2986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:7"
            },
            "scope": 2997,
            "src": "381:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2998,
        "src": "345:188:7",
        "usedErrors": []
      }
    ],
    "src": "33:502:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x74e589e3850d228580435aa9951b1F4c7D968fD7",
      "transactionHash": "0xde821bb7ca8fdaa0c79132c7bae47a499ceaf6a507b470a2ada69c40fa3109a6"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T16:51:37.031Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "This smart contract is a \"vault\" it holds onto the fees that the protocol has gathered and any GSVE that is to be rewarded from protocol iteraction",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
{
  "contractName": "GSVEToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"the GSVE token is a ERC20 token with burning capabilities\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"a function that allows a user to burn x amount of tokens\"},\"burnFrom(address,uint256)\":{\"details\":\"a function that allows burning tokens from an approved address\"},\"constructor\":{\"details\":\"mint 1 billion GSVE tokens\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEToken.sol\":\"GSVEToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEToken.sol\":{\"keccak256\":\"0xb0f39cb0fb895d03feecbe5b5d31df48f2e4277739250e5a14992b535ef7cd78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c26b16a4b49e1233cd2466b39f8aa9a42ba3f60dde733695c7888c3852465b2\",\"dweb:/ipfs/QmV8fjrjxPzyfuFy5JGvMgnmjTmVNtwrmNfKnzc5KeuwBk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252601781527f47617320536176652050726f746f636f6c20546f6b656e0000000000000000006020808301918252835180850190945260048452634753564560e01b908401528151919291620000739160039162000197565b5080516200008990600490602084019062000197565b505050620000a9336a52b7d2dcc80cd2e4000000620000af60201b60201c565b6200029f565b6001600160a01b0382166200010a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011e91906200023d565b90915550506001600160a01b038216600090815260208190526040812080548392906200014d9084906200023d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001a59062000262565b90600052602060002090601f016020900481019282620001c9576000855562000214565b82601f10620001e457805160ff191683800117855562000214565b8280016001018555821562000214579182015b8281111562000214578251825591602001919060010190620001f7565b506200022292915062000226565b5090565b5b8082111562000222576000815560010162000227565b600082198211156200025d57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200027757607f821691505b602082108114156200029957634e487b7160e01b600052602260045260246000fd5b50919050565b610ca480620002af6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101bd578063a457c2d7146101c5578063a9059cbb146101d8578063dd62ed3e146101eb57600080fd5b806342966c681461016c57806370a082311461018157806379cc6790146101aa57600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461015957600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610224565b6040516100f99190610b27565b60405180910390f35b610115610110366004610ae6565b6102b6565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610aab565b6102cc565b604051601281526020016100f9565b610115610167366004610ae6565b610397565b61017f61017a366004610b0f565b6103ce565b005b61012961018f366004610a58565b6001600160a01b031660009081526020819052604090205490565b61017f6101b8366004610ae6565b6103db565b6100ec610441565b6101156101d3366004610ae6565b610450565b6101156101e6366004610ae6565b610503565b6101296101f9366004610a79565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023390610bc7565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610bc7565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b60006102c3338484610510565b50600192915050565b60006102d9848484610669565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103785760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038c85336103878685610bb0565b610510565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c3918590610387908690610b98565b6103d8338261088a565b50565b6103e5828261088a565b6001600160a01b038216600090815260016020908152604080832033845290915290205460ff81901c61043c5761043c833361038785604051806060016040528060248152602001610c4b60249139869190610a10565b505050565b60606004805461023390610bc7565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161036f565b6104f933856103878685610bb0565b5060019392505050565b60006102c3338484610669565b6001600160a01b03831661058b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0382166106075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106e55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0382166107615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b038316600090815260208190526040902054818110156107f05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161036f565b6107fa8282610bb0565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610830908490610b98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087c91815260200190565b60405180910390a350505050565b6001600160a01b0382166109065760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b038216600090815260208190526040902054818110156109955760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b61099f8282610bb0565b6001600160a01b038416600090815260208190526040812091909155600280548492906109cd908490610bb0565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161065c565b60008184841115610a345760405162461bcd60e51b815260040161036f9190610b27565b505050900390565b80356001600160a01b0381168114610a5357600080fd5b919050565b600060208284031215610a69578081fd5b610a7282610a3c565b9392505050565b60008060408385031215610a8b578081fd5b610a9483610a3c565b9150610aa260208401610a3c565b90509250929050565b600080600060608486031215610abf578081fd5b610ac884610a3c565b9250610ad660208501610a3c565b9150604084013590509250925092565b60008060408385031215610af8578182fd5b610b0183610a3c565b946020939093013593505050565b600060208284031215610b20578081fd5b5035919050565b6000602080835283518082850152825b81811015610b5357858101830151858201604001528201610b37565b81811115610b645783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610bab57610bab610c1b565b500190565b600082821015610bc257610bc2610c1b565b500390565b600181811c90821680610bdb57607f821691505b60208210811415610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209aa2aa89f89a0e6b91b0c7e8b8f3d63e0524b071f469deeb082d6f53d05c5f6764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101bd578063a457c2d7146101c5578063a9059cbb146101d8578063dd62ed3e146101eb57600080fd5b806342966c681461016c57806370a082311461018157806379cc6790146101aa57600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461015957600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610224565b6040516100f99190610b27565b60405180910390f35b610115610110366004610ae6565b6102b6565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610aab565b6102cc565b604051601281526020016100f9565b610115610167366004610ae6565b610397565b61017f61017a366004610b0f565b6103ce565b005b61012961018f366004610a58565b6001600160a01b031660009081526020819052604090205490565b61017f6101b8366004610ae6565b6103db565b6100ec610441565b6101156101d3366004610ae6565b610450565b6101156101e6366004610ae6565b610503565b6101296101f9366004610a79565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023390610bc7565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610bc7565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b60006102c3338484610510565b50600192915050565b60006102d9848484610669565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103785760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038c85336103878685610bb0565b610510565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c3918590610387908690610b98565b6103d8338261088a565b50565b6103e5828261088a565b6001600160a01b038216600090815260016020908152604080832033845290915290205460ff81901c61043c5761043c833361038785604051806060016040528060248152602001610c4b60249139869190610a10565b505050565b60606004805461023390610bc7565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161036f565b6104f933856103878685610bb0565b5060019392505050565b60006102c3338484610669565b6001600160a01b03831661058b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0382166106075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106e55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b0382166107615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b038316600090815260208190526040902054818110156107f05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161036f565b6107fa8282610bb0565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610830908490610b98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087c91815260200190565b60405180910390a350505050565b6001600160a01b0382166109065760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b6001600160a01b038216600090815260208190526040902054818110156109955760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161036f565b61099f8282610bb0565b6001600160a01b038416600090815260208190526040812091909155600280548492906109cd908490610bb0565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161065c565b60008184841115610a345760405162461bcd60e51b815260040161036f9190610b27565b505050900390565b80356001600160a01b0381168114610a5357600080fd5b919050565b600060208284031215610a69578081fd5b610a7282610a3c565b9392505050565b60008060408385031215610a8b578081fd5b610a9483610a3c565b9150610aa260208401610a3c565b90509250929050565b600080600060608486031215610abf578081fd5b610ac884610a3c565b9250610ad660208501610a3c565b9150604084013590509250925092565b60008060408385031215610af8578182fd5b610b0183610a3c565b946020939093013593505050565b600060208284031215610b20578081fd5b5035919050565b6000602080835283518082850152825b81811015610b5357858101830151858201604001528201610b37565b81811115610b645783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610bab57610bab610c1b565b500190565b600082821015610bc257610bc2610c1b565b500390565b600181811c90821680610bdb57607f821691505b60208210811415610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212209aa2aa89f89a0e6b91b0c7e8b8f3d63e0524b071f469deeb082d6f53d05c5f6764736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1172:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:181:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:25",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:33:25",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:61:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:61:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "360:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "345:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "337:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:25",
                "type": ""
              }
            ],
            "src": "14:355:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "485:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "497:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "485:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "527:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "538:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "520:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "444:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "466:4:25",
                "type": ""
              }
            ],
            "src": "374:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:181:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "639:115:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "660:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "669:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "674:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "665:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "665:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "653:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "653:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "653:33:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "709:4:25",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "734:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "739:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "727:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "727:17:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "727:17:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "620:1:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "627:1:25"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "623:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "623:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "617:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "614:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "763:16:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "774:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "777:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "770:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "763:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "587:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "590:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "596:3:25",
                "type": ""
              }
            ],
            "src": "556:229:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "845:325:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "855:22:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "869:1:25",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "872:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "865:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "865:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "855:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "886:38:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "916:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "912:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:12:25"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "890:18:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "963:31:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "965:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "979:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:4:25",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "975:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:17:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "965:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "943:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "936:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:26:25"
                  },
                  "nodeType": "YulIf",
                  "src": "933:2:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1053:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1074:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1081:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1086:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1077:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1077:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1067:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1067:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1118:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1121:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1111:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1111:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1111:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1149:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1139:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1009:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1032:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1040:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1029:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:14:25"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1006:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:38:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1003:2:25"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "825:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "834:6:25",
                "type": ""
              }
            ],
            "src": "790:380:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7264:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:25",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:25"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:25",
                "type": ""
              }
            ],
            "src": "14:196:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:25",
                "type": ""
              }
            ],
            "src": "215:196:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:183:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:25"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "594:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "461:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "472:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "484:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "492:6:25",
                "type": ""
              }
            ],
            "src": "416:270:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "795:234:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "841:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "850:6:25"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "858:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "843:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "843:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "843:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "816:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "825:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "812:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "812:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "837:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "808:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "805:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "876:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "886:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "876:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "924:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "957:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "968:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "934:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "924:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "981:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1008:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1019:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1004:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1004:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "991:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "981:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "745:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "756:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "768:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "776:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "784:6:25",
                "type": ""
              }
            ],
            "src": "691:338:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1121:177:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1167:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1176:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1184:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1169:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1169:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1169:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1142:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1151:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1138:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1163:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1131:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1202:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1231:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1212:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1202:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1250:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1288:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1273:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1260:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1250:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1079:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1090:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1102:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1110:6:25",
                "type": ""
              }
            ],
            "src": "1034:264:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1373:120:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1419:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1428:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1436:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1421:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1421:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1421:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1394:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1403:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1390:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1390:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1415:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1386:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1386:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1383:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1454:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1477:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1464:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1464:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1454:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1339:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1350:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1362:6:25",
                "type": ""
              }
            ],
            "src": "1303:190:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1593:92:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1603:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1615:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1626:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1603:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1645:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1670:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1663:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1663:14:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1656:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1656:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1638:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1638:41:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1562:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1573:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1584:4:25",
                "type": ""
              }
            ],
            "src": "1498:187:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1811:541:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1821:12:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1831:2:25",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1825:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1860:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1872:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1892:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1886:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1886:13:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1876:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1919:9:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1930:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1915:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1915:18:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1935:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1908:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1908:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1908:34:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1951:13:25",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1960:4:25"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1955:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2023:90:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2052:9:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2063:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2048:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2048:17:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2067:2:25",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2044:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2044:26:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2086:6:25"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2094:1:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2082:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2082:14:25"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2098:2:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2078:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2078:23:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2072:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2072:30:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2037:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2037:66:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2037:66:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1984:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1987:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1981:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1995:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1997:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2006:1:25"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2009:2:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2002:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2002:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1997:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1977:3:25",
                    "statements": []
                  },
                  "src": "1973:140:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2147:69:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2176:9:25"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2187:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2172:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2172:22:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2196:2:25",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2168:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2168:31:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2201:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2161:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2161:45:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2161:45:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2128:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2131:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2125:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2122:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2225:121:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2241:9:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2260:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2268:2:25",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2256:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2256:15:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2273:66:25",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2252:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:88:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2237:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2237:104:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2343:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2233:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:113:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2225:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1780:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1791:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1802:4:25",
                "type": ""
              }
            ],
            "src": "1690:662:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2531:225:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2548:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2559:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2541:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2541:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2582:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2593:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2578:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2578:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2598:2:25",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2571:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2571:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2621:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2632:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2617:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2617:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2637:34:25",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2610:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2610:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2692:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2703:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2688:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2688:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2708:5:25",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2681:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:33:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2681:33:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2723:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2735:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2731:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2731:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2723:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2508:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2522:4:25",
                "type": ""
              }
            ],
            "src": "2357:399:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2935:224:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2952:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2963:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2945:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2945:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2986:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2997:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2982:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2982:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3002:2:25",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2975:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2975:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2975:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3025:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3036:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3021:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3021:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3041:34:25",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3014:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3014:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3014:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3096:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3107:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3092:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3092:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3112:4:25",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:32:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3085:32:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3126:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3138:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3149:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3134:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3126:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2912:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2926:4:25",
                "type": ""
              }
            ],
            "src": "2761:398:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3338:224:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3355:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3366:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3348:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3348:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3348:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3389:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3400:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3385:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3385:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3405:2:25",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3378:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3378:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3428:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3439:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3424:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3424:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3444:34:25",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3417:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3417:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3417:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3499:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3510:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3495:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3495:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3515:4:25",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3488:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3488:32:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3488:32:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3529:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3541:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3552:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3537:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3529:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3315:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3329:4:25",
                "type": ""
              }
            ],
            "src": "3164:398:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3741:228:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3758:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3769:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3751:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3751:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3751:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3792:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3803:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3788:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3788:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3808:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3781:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3781:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3781:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3831:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3842:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3827:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3827:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3847:34:25",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3820:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3820:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3820:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3902:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3913:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3898:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3898:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3918:8:25",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3891:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:36:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3891:36:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3936:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3948:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3959:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3944:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3936:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3718:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3732:4:25",
                "type": ""
              }
            ],
            "src": "3567:402:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4148:230:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4165:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4176:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4158:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4158:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4158:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4199:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4210:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4195:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4195:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4215:2:25",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4188:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4188:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4188:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4238:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4249:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4234:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4234:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4254:34:25",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4227:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4227:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4309:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4320:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4305:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4305:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4325:10:25",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4298:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4298:38:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4298:38:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4345:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4357:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4368:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4353:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4353:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4345:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4125:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4139:4:25",
                "type": ""
              }
            ],
            "src": "3974:404:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4557:223:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4574:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4585:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4567:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4567:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4567:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4608:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4619:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4604:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4604:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4624:2:25",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4597:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4597:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4647:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4658:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4643:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4643:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4663:34:25",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4636:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4636:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4636:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4718:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4729:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4714:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4714:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4734:3:25",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4707:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4707:31:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4747:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4759:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4770:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4755:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4755:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4747:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4534:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4548:4:25",
                "type": ""
              }
            ],
            "src": "4383:397:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4959:227:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4976:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4987:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4969:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4969:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5010:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5021:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5006:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5006:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:2:25",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4999:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4999:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5049:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5060:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5045:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5045:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5065:34:25",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5038:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5038:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5038:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5120:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5131:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5116:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5116:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5136:7:25",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5109:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5109:35:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5109:35:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5153:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5165:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5176:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5161:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5161:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5153:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4936:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4950:4:25",
                "type": ""
              }
            ],
            "src": "4785:401:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5365:226:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5382:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5393:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5375:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5375:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5416:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5427:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5432:2:25",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5405:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5405:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5405:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5455:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5466:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5451:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5451:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5471:34:25",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5444:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5444:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5526:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5537:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5522:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5522:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5542:6:25",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5515:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5515:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5515:34:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5558:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5570:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5566:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5566:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5558:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5342:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5356:4:25",
                "type": ""
              }
            ],
            "src": "5191:400:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5770:227:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5787:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5798:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5780:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5780:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5821:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5832:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5817:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5817:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5837:2:25",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5810:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5810:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5810:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5860:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5871:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5856:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5856:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5876:34:25",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5849:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5849:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5849:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5931:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5942:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5927:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5927:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5947:7:25",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5920:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:35:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5920:35:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5964:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5976:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5987:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5972:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5972:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5964:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5747:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5761:4:25",
                "type": ""
              }
            ],
            "src": "5596:401:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6103:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6113:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6125:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6136:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6121:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6121:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6113:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6155:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6166:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6148:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6148:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6148:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6072:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6083:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6094:4:25",
                "type": ""
              }
            ],
            "src": "6002:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6281:87:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6291:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6303:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6314:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6299:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6299:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6291:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6333:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6348:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6356:4:25",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6344:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6344:17:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6326:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6326:36:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6326:36:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6250:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6261:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6272:4:25",
                "type": ""
              }
            ],
            "src": "6184:184:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6421:80:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6448:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6450:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6450:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6450:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6437:1:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6444:1:25"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6434:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:13:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6431:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:16:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6490:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6493:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6479:3:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6404:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6407:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6413:3:25",
                "type": ""
              }
            ],
            "src": "6373:128:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6555:76:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6577:22:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6579:16:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6579:18:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6579:18:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6571:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6574:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6568:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6568:8:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6565:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6608:17:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6620:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6623:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6616:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6616:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6608:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6537:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6540:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6546:4:25",
                "type": ""
              }
            ],
            "src": "6506:125:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6691:382:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6701:22:25",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6715:1:25",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6718:4:25"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "6711:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6711:12:25"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6701:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6732:38:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6762:4:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6768:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6758:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6758:12:25"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6736:18:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6809:31:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6811:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6825:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6833:4:25",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6821:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6821:17:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6811:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6789:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6782:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6782:26:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6779:2:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6899:168:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6920:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6923:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6913:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6913:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6913:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7021:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7024:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7014:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7014:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7014:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7049:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7052:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7042:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7042:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7042:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6855:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6878:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6886:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6875:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6875:14:25"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6852:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6852:38:25"
                  },
                  "nodeType": "YulIf",
                  "src": "6849:2:25"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6671:4:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6680:6:25",
                "type": ""
              }
            ],
            "src": "6636:437:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7110:152:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7127:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7130:77:25",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7120:88:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7120:88:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7224:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7227:4:25",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7217:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7217:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7217:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7248:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7251:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7241:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7241:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7241:15:25"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7078:184:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "253:841:6:-:0;;;382:118;;;;;;;;;-1:-1:-1;1842:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1842:114:19;;;;1909:13;;1842:114;;;1909:13;;:5;;:13;:::i;:::-;-1:-1:-1;1932:17:19;;;;:7;;:17;;;;;:::i;:::-;;1842:114;;455:37:6::1;461:10;473:18;455:5;;;:37;;:::i;:::-;253:841:::0;;7940:330:19;-1:-1:-1;;;;;8023:21:19;;8015:65;;;;-1:-1:-1;;;8015:65:19;;216:2:25;8015:65:19;;;198:21:25;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8015:65:19;;;;;;;;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8183:18:19;;:9;:18;;;;;;;;;;:28;;8205:6;;8183:9;:28;;8205:6;;8183:28;:::i;:::-;;;;-1:-1:-1;;8226:37:19;;520:25:25;;;-1:-1:-1;;;;;8226:37:19;;;8243:1;;8226:37;;508:2:25;493:18;8226:37:19;;;;;;;7940:330;;:::o;253:841:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;253:841:6;;;-1:-1:-1;253:841:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:229:25;596:3;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:25;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:25;;604:181::o;790:380::-;869:1;865:12;;;;912;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;253:841:6;;;;;;",
  "deployedSourceMap": "253:841:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1663:14:25;;1656:22;1638:41;;1626:2;1611:18;4091:166:19;1593:92:25;3082:106:19;3169:12;;3082:106;;;6148:25:25;;;6136:2;6121:18;3082:106:19;6103:76:25;4724:414:19;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;6326:36:25;;6314:2;6299:18;2940:82:19;6281:87:25;5533:212:19;;;;;;:::i;:::-;;:::i;594:83:6:-;;;;;;:::i;:::-;;:::i;:::-;;3246:125:19;;;;;;:::i;:::-;-1:-1:-1;;;;;3346:18:19;3320:7;3346:18;;;;;;;;;;;;3246:125;777:314:6;;;;;;:::i;:::-;;:::i;2223:93:19:-;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:19;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:22;4213:7:19;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:19;4091:166;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:19;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:22;4920:33:19;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:19;;4176:2:25;4963:79:19;;;4158:21:25;4215:2;4195:18;;;4188:30;4254:34;4234:18;;;4227:62;4325:10;4305:18;;;4298:38;4353:19;;4963:79:19;;;;;;;;;5052:57;5061:6;665:10:22;5083:25:19;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:19;;4724:414;-1:-1:-1;;;;4724:414:19:o;5533:212::-;665:10:22;5621:4:19;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:19;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;594:83:6:-;644:25;650:10;662:6;644:5;:25::i;:::-;594:83;:::o;777:314::-;848:22;854:7;863:6;848:5;:22::i;:::-;-1:-1:-1;;;;;3919:18:19;;881:15:6;3919:18:19;;;:11;:18;;;;;;;;918:10:6;3919:27:19;;;;;;;;956:3:6;945:14;;;940:144;;982:90;991:7;1000:10;1012:59;1024:6;1012:59;;;;;;;;;;;;;;;;;:7;;:59;:11;:59::i;982:90::-;777:314;;;:::o;2223:93:19:-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:22;6325:4:19;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:19;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:19;;5798:2:25;6412:85:19;;;5780:21:25;5837:2;5817:18;;;5810:30;5876:34;5856:18;;;5849:62;5947:7;5927:18;;;5920:35;5972:19;;6412:85:19;5770:227:25;6412:85:19;6507:67;665:10:22;6530:7:19;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:19;;6232:371;-1:-1:-1;;;6232:371:19:o;3574:172::-;3660:4;3676:42;665:10:22;3700:9:19;3711:6;3676:9;:42::i;9496:340::-;-1:-1:-1;;;;;9597:19:19;;9589:68;;;;-1:-1:-1;;;9589:68:19;;5393:2:25;9589:68:19;;;5375:21:25;5432:2;5412:18;;;5405:30;5471:34;5451:18;;;5444:62;5542:6;5522:18;;;5515:34;5566:19;;9589:68:19;5365:226:25;9589:68:19;-1:-1:-1;;;;;9675:21:19;;9667:68;;;;-1:-1:-1;;;9667:68:19;;3366:2:25;9667:68:19;;;3348:21:25;3405:2;3385:18;;;3378:30;3444:34;3424:18;;;3417:62;3515:4;3495:18;;;3488:32;3537:19;;9667:68:19;3338:224:25;9667:68:19;-1:-1:-1;;;;;9746:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;6148:25:25;;;9797:32:19;;6121:18:25;9797:32:19;;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:19;;7174:70;;;;-1:-1:-1;;;7174:70:19;;4987:2:25;7174:70:19;;;4969:21:25;5026:2;5006:18;;;4999:30;5065:34;5045:18;;;5038:62;5136:7;5116:18;;;5109:35;5161:19;;7174:70:19;4959:227:25;7174:70:19;-1:-1:-1;;;;;7262:23:19;;7254:71;;;;-1:-1:-1;;;7254:71:19;;2559:2:25;7254:71:19;;;2541:21:25;2598:2;2578:18;;;2571:30;2637:34;2617:18;;;2610:62;2708:5;2688:18;;;2681:33;2731:19;;7254:71:19;2531:225:25;7254:71:19;-1:-1:-1;;;;;7418:17:19;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:19;;3769:2:25;7445:74:19;;;3751:21:25;3808:2;3788:18;;;3781:30;3847:34;3827:18;;;3820:62;3918:8;3898:18;;;3891:36;3944:19;;7445:74:19;3741:228:25;7445:74:19;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:19;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:19;7636:6;-1:-1:-1;;;;;7627:35:19;;7655:6;7627:35;;;;6148:25:25;;6136:2;6121:18;;6103:76;7627:35:19;;;;;;;;7077:592;;;;:::o;8590:483::-;-1:-1:-1;;;;;8673:21:19;;8665:67;;;;-1:-1:-1;;;8665:67:19;;4585:2:25;8665:67:19;;;4567:21:25;4624:2;4604:18;;;4597:30;4663:34;4643:18;;;4636:62;4734:3;4714:18;;;4707:31;4755:19;;8665:67:19;4557:223:25;8665:67:19;-1:-1:-1;;;;;8828:18:19;;8803:22;8828:18;;;;;;;;;;;8864:24;;;;8856:71;;;;-1:-1:-1;;;8856:71:19;;2963:2:25;8856:71:19;;;2945:21:25;3002:2;2982:18;;;2975:30;3041:34;3021:18;;;3014:62;3112:4;3092:18;;;3085:32;3134:19;;8856:71:19;2935:224:25;8856:71:19;8958:23;8975:6;8958:14;:23;:::i;:::-;-1:-1:-1;;;;;8937:18:19;;:9;:18;;;;;;;;;;:44;;;;8991:12;:22;;9007:6;;8937:9;8991:22;;9007:6;;8991:22;:::i;:::-;;;;-1:-1:-1;;9029:37:19;;6148:25:25;;;9055:1:19;;-1:-1:-1;;;;;9029:37:19;;;;;6136:2:25;6121:18;9029:37:19;6103:76:25;4876:201:24;4962:7;5021:12;5013:6;;;;5005:29;;;;-1:-1:-1;;;5005:29:24;;;;;;;;:::i;:::-;-1:-1:-1;;;5055:5:24;;;4876:201::o;14:196:25:-;82:20;;-1:-1:-1;;;;;131:54:25;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:25:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:338::-;768:6;776;784;837:2;825:9;816:7;812:23;808:32;805:2;;;858:6;850;843:22;805:2;886:29;905:9;886:29;:::i;:::-;876:39;;934:38;968:2;957:9;953:18;934:38;:::i;:::-;924:48;;1019:2;1008:9;1004:18;991:32;981:42;;795:234;;;;;:::o;1034:264::-;1102:6;1110;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;1212:29;1231:9;1212:29;:::i;:::-;1202:39;1288:2;1273:18;;;;1260:32;;-1:-1:-1;;;1121:177:25:o;1303:190::-;1362:6;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;-1:-1:-1;1464:23:25;;1373:120;-1:-1:-1;1373:120:25:o;1690:662::-;1802:4;1831:2;1860;1849:9;1842:21;1892:6;1886:13;1935:6;1930:2;1919:9;1915:18;1908:34;1960:4;1973:140;1987:6;1984:1;1981:13;1973:140;;;2082:14;;;2078:23;;2072:30;2048:17;;;2067:2;2044:26;2037:66;2002:10;;1973:140;;;2131:6;2128:1;2125:13;2122:2;;;2201:4;2196:2;2187:6;2176:9;2172:22;2168:31;2161:45;2122:2;-1:-1:-1;2268:2:25;2256:15;2273:66;2252:88;2237:104;;;;2343:2;2233:113;;1811:541;-1:-1:-1;;;1811:541:25:o;6373:128::-;6413:3;6444:1;6440:6;6437:1;6434:13;6431:2;;;6450:18;;:::i;:::-;-1:-1:-1;6486:9:25;;6421:80::o;6506:125::-;6546:4;6574:1;6571;6568:8;6565:2;;;6579:18;;:::i;:::-;-1:-1:-1;6616:9:25;;6555:76::o;6636:437::-;6715:1;6711:12;;;;6758;;;6779:2;;6833:4;6825:6;6821:17;6811:27;;6779:2;6886;6878:6;6875:14;6855:18;6852:38;6849:2;;;6923:77;6920:1;6913:88;7024:4;7021:1;7014:15;7052:4;7049:1;7042:15;6849:2;;6691:382;;;:::o;7078:184::-;7130:77;7127:1;7120:88;7227:4;7224:1;7217:15;7251:4;7248:1;7241:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n* @dev the GSVE token is a ERC20 token with burning capabilities\r\n*/\r\ncontract GSVEToken is ERC20{    \r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n    * @dev mint 1 billion GSVE tokens\r\n    */\r\n    constructor() public ERC20(\"Gas Save Protocol Token\", \"GSVE\") {\r\n        _mint(msg.sender, 100000000*(10**18));\r\n    }\r\n\r\n    /**\r\n    * @dev a function that allows a user to burn x amount of tokens\r\n    */\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n    * @dev a function that allows burning tokens from an approved address\r\n    */\r\n    function burnFrom(address account, uint256 amount) external {\r\n        _burn(account, amount);\r\n        uint256 allowed = allowance(account, msg.sender);\r\n        if ((allowed >> 255) == 0) {\r\n            _approve(account, msg.sender, allowed.sub(amount, \"ERC20: burn amount exceeds allowance\"));\r\n        }\r\n    }\r\n}",
  "sourcePath": "C:/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEToken.sol",
  "ast": {
    "absolutePath": "/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEToken.sol",
    "exportedSymbols": {
      "Context": [
        6132
      ],
      "ERC20": [
        5735
      ],
      "GSVEToken": [
        2969
      ],
      "IERC20": [
        5813
      ],
      "SafeMath": [
        6517
      ]
    },
    "id": 2970,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2886,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2887,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2970,
        "sourceUnit": 5736,
        "src": "60:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2970,
        "sourceUnit": 6518,
        "src": "117:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2890,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5735,
              "src": "275:5:6"
            },
            "id": 2891,
            "nodeType": "InheritanceSpecifier",
            "src": "275:5:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2889,
          "nodeType": "StructuredDocumentation",
          "src": "178:73:6",
          "text": " @dev the GSVE token is a ERC20 token with burning capabilities"
        },
        "fullyImplemented": true,
        "id": 2969,
        "linearizedBaseContracts": [
          2969,
          5735,
          5813,
          6132
        ],
        "name": "GSVEToken",
        "nameLocation": "262:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2894,
            "libraryName": {
              "id": 2892,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6517,
              "src": "297:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "291:27:6",
            "typeName": {
              "id": 2893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2913,
              "nodeType": "Block",
              "src": "444:56:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2903,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "461:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "461:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        },
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030",
                          "id": 2905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "473:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 2908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 2906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "484:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 2907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "488:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "484:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 2909,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "483:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "473:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        }
                      ],
                      "id": 2902,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5616,
                      "src": "455:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "455:37:6"
                }
              ]
            },
            "documentation": {
              "id": 2895,
              "nodeType": "StructuredDocumentation",
              "src": "326:50:6",
              "text": " @dev mint 1 billion GSVE tokens"
            },
            "id": 2914,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "47617320536176652050726f746f636f6c20546f6b656e",
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "409:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_64e63e3f8f7a0b955a830fc8a2ea8a6af0e343080969e045c235a939cbaac9e8",
                      "typeString": "literal_string \"Gas Save Protocol Token\""
                    },
                    "value": "Gas Save Protocol Token"
                  },
                  {
                    "hexValue": "47535645",
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "436:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8abe5e237046adc6b3292d05514ca94ef02c687e3c66455e970ec843b089e889",
                      "typeString": "literal_string \"GSVE\""
                    },
                    "value": "GSVE"
                  }
                ],
                "id": 2900,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2897,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5735,
                  "src": "403:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "403:40:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:6"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:6"
            },
            "scope": 2969,
            "src": "382:118:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2926,
              "nodeType": "Block",
              "src": "633:44:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2921,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "650:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "650:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2923,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "662:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2920,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5678,
                      "src": "644:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "644:25:6"
                }
              ]
            },
            "documentation": {
              "id": 2915,
              "nodeType": "StructuredDocumentation",
              "src": "508:80:6",
              "text": " @dev a function that allows a user to burn x amount of tokens"
            },
            "functionSelector": "42966c68",
            "id": 2927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "603:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "608:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "607:16:6"
            },
            "returnParameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:6"
            },
            "scope": 2969,
            "src": "594:83:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "837:254:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2936,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2930,
                        "src": "854:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2937,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "863:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2935,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5678,
                      "src": "848:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "848:22:6"
                },
                {
                  "assignments": [
                    2941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2941,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "889:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2967,
                      "src": "881:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "881:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2947,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2943,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2930,
                        "src": "909:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "918:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "918:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2942,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5366,
                      "src": "899:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "881:48:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2948,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2941,
                            "src": "945:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "hexValue": "323535",
                            "id": 2949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "956:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "945:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2951,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "944:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "964:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "944:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2966,
                  "nodeType": "IfStatement",
                  "src": "940:144:6",
                  "trueBody": {
                    "id": 2965,
                    "nodeType": "Block",
                    "src": "967:117:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2955,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2930,
                              "src": "991:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2956,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1000:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1000:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2960,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2932,
                                  "src": "1024:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "id": 2961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1032:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                                    "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                                  },
                                  "value": "ERC20: burn amount exceeds allowance"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                                    "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                                  }
                                ],
                                "expression": {
                                  "id": 2958,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2941,
                                  "src": "1012:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6466,
                                "src": "1012:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                }
                              },
                              "id": 2962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1012:59:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2954,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5723,
                            "src": "982:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "982:90:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "982:90:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2928,
              "nodeType": "StructuredDocumentation",
              "src": "685:86:6",
              "text": " @dev a function that allows burning tokens from an approved address"
            },
            "functionSelector": "79cc6790",
            "id": 2968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "786:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "803:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "795:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "820:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "812:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:33:6"
            },
            "returnParameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:6"
            },
            "scope": 2969,
            "src": "777:314:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2970,
        "src": "253:841:6",
        "usedErrors": []
      }
    ],
    "src": "33:1061:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/khera/Documents/GitHub/GasSwapTokens/contracts/GSVEToken.sol",
    "exportedSymbols": {
      "Context": [
        6132
      ],
      "ERC20": [
        5735
      ],
      "GSVEToken": [
        2969
      ],
      "IERC20": [
        5813
      ],
      "SafeMath": [
        6517
      ]
    },
    "id": 2970,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2886,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2887,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2970,
        "sourceUnit": 5736,
        "src": "60:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2970,
        "sourceUnit": 6518,
        "src": "117:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2890,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5735,
              "src": "275:5:6"
            },
            "id": 2891,
            "nodeType": "InheritanceSpecifier",
            "src": "275:5:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2889,
          "nodeType": "StructuredDocumentation",
          "src": "178:73:6",
          "text": " @dev the GSVE token is a ERC20 token with burning capabilities"
        },
        "fullyImplemented": true,
        "id": 2969,
        "linearizedBaseContracts": [
          2969,
          5735,
          5813,
          6132
        ],
        "name": "GSVEToken",
        "nameLocation": "262:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2894,
            "libraryName": {
              "id": 2892,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6517,
              "src": "297:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "291:27:6",
            "typeName": {
              "id": 2893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2913,
              "nodeType": "Block",
              "src": "444:56:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2903,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "461:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "461:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        },
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030",
                          "id": 2905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "473:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 2908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 2906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "484:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 2907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "488:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "484:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 2909,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "483:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "473:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000000"
                        }
                      ],
                      "id": 2902,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5616,
                      "src": "455:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "455:37:6"
                }
              ]
            },
            "documentation": {
              "id": 2895,
              "nodeType": "StructuredDocumentation",
              "src": "326:50:6",
              "text": " @dev mint 1 billion GSVE tokens"
            },
            "id": 2914,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "47617320536176652050726f746f636f6c20546f6b656e",
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "409:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_64e63e3f8f7a0b955a830fc8a2ea8a6af0e343080969e045c235a939cbaac9e8",
                      "typeString": "literal_string \"Gas Save Protocol Token\""
                    },
                    "value": "Gas Save Protocol Token"
                  },
                  {
                    "hexValue": "47535645",
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "436:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8abe5e237046adc6b3292d05514ca94ef02c687e3c66455e970ec843b089e889",
                      "typeString": "literal_string \"GSVE\""
                    },
                    "value": "GSVE"
                  }
                ],
                "id": 2900,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2897,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5735,
                  "src": "403:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "403:40:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:6"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:6"
            },
            "scope": 2969,
            "src": "382:118:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2926,
              "nodeType": "Block",
              "src": "633:44:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2921,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "650:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "650:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2923,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "662:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2920,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5678,
                      "src": "644:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "644:25:6"
                }
              ]
            },
            "documentation": {
              "id": 2915,
              "nodeType": "StructuredDocumentation",
              "src": "508:80:6",
              "text": " @dev a function that allows a user to burn x amount of tokens"
            },
            "functionSelector": "42966c68",
            "id": 2927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "603:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "608:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "607:16:6"
            },
            "returnParameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:6"
            },
            "scope": 2969,
            "src": "594:83:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "837:254:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2936,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2930,
                        "src": "854:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2937,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "863:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2935,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5678,
                      "src": "848:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "848:22:6"
                },
                {
                  "assignments": [
                    2941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2941,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "889:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2967,
                      "src": "881:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "881:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2947,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2943,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2930,
                        "src": "909:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "918:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "918:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2942,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5366,
                      "src": "899:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "881:48:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2948,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2941,
                            "src": "945:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">>",
                          "rightExpression": {
                            "hexValue": "323535",
                            "id": 2949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "956:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "945:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2951,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "944:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "964:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "944:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2966,
                  "nodeType": "IfStatement",
                  "src": "940:144:6",
                  "trueBody": {
                    "id": 2965,
                    "nodeType": "Block",
                    "src": "967:117:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2955,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2930,
                              "src": "991:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2956,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1000:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1000:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2960,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2932,
                                  "src": "1024:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "id": 2961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1032:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                                    "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                                  },
                                  "value": "ERC20: burn amount exceeds allowance"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                                    "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                                  }
                                ],
                                "expression": {
                                  "id": 2958,
                                  "name": "allowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2941,
                                  "src": "1012:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6466,
                                "src": "1012:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                }
                              },
                              "id": 2962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1012:59:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2954,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5723,
                            "src": "982:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "982:90:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "982:90:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2928,
              "nodeType": "StructuredDocumentation",
              "src": "685:86:6",
              "text": " @dev a function that allows burning tokens from an approved address"
            },
            "functionSelector": "79cc6790",
            "id": 2968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "786:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "803:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "795:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "820:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2968,
                  "src": "812:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:33:6"
            },
            "returnParameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:6"
            },
            "scope": 2969,
            "src": "777:314:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2970,
        "src": "253:841:6",
        "usedErrors": []
      }
    ],
    "src": "33:1061:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xdbC4B2DA64D9B59093f894BA7236f451476D942c",
      "transactionHash": "0x410161f3601164ebdc41a02ef0d8b7de97d201ad6e2be7550beebc4e93dc1b16"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T16:51:37.002Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "the GSVE token is a ERC20 token with burning capabilities",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "a function that allows a user to burn x amount of tokens"
      },
      "burnFrom(address,uint256)": {
        "details": "a function that allows burning tokens from an approved address"
      },
      "constructor": {
        "details": "mint 1 billion GSVE tokens"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}